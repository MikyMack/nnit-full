<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US" lang="en-US">
<!--<![endif]-->

<head>
    <!-- Basic Page Needs -->
    <meta charset="utf-8">
    <title>IIMF - Admin Dashboard</title>

    <meta name="author" content="trivlogic.com">

    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!-- Theme Style -->
    <link rel="stylesheet" type="text/css" href="admin-css/animate.min.css">
    <link rel="stylesheet" type="text/css" href="admin-css/animation.css">
    <link rel="stylesheet" type="text/css" href="admin-css/bootstrap.css">
    <link rel="stylesheet" type="text/css" href="admin-css/bootstrap-select.min.css">
    <link rel="stylesheet" type="text/css" href="admin-css/styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <!-- Font -->
    <link rel="stylesheet" href="admin-font/fonts.css">

    <!-- Icon -->
    <link rel="stylesheet" href="admin-icon/style.css">

    <!-- Favicon and Touch Icons  -->
    <link rel="shortcut icon" href="/images/iimf/logo.png">
    <link rel="apple-touch-icon-precomposed" href="/images/iimf/logo.png">

</head>

<body>

    <!-- #wrapper -->
    <div id="wrapper">
        <!-- #page -->
        <div id="page" class="">
            <!-- layout-wrap -->
            <div class="layout-wrap">
            
                <!-- section-menu-left -->
                <div class="section-menu-left">
                    <div class="box-logo">
                        <a href="/dashboard" id="site-logo-inner">
                            <img style="width:60px;" id="logo_header" alt="Maxtron" src="/images/iimf/logo.png"
                                data-light="/images/iimf/logo.png" data-dark="/images/iimf/logo.png">
                        </a>
                        <div class="button-show-hide">
                            <i class="icon-chevron-left"></i>
                        </div>
                    </div>
                    <div class="section-menu-left-wrap">
                        <div class="center">
                            <div class="center-item">
                                <ul class="">
                                    <li class="menu-item">
                                        <a href="/dashboard" class="">
                                            <div class="icon">
                                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                                                    xmlns="http://www.w3.org/2000/svg">
                                                    <path fill-rule="evenodd" clip-rule="evenodd"
                                                        d="M12.2652 3.57566C12.1187 3.42921 11.8813 3.42921 11.7348 3.57566L5.25 10.0605V19.8748C5.25 20.0819 5.41789 20.2498 5.625 20.2498H9V16.1248C9 15.0893 9.83947 14.2498 10.875 14.2498H13.125C14.1605 14.2498 15 15.0893 15 16.1248V20.2498H18.375C18.5821 20.2498 18.75 20.0819 18.75 19.8748V10.0605L12.2652 3.57566ZM20.25 11.5605L21.2197 12.5302C21.5126 12.8231 21.9874 12.8231 22.2803 12.5302C22.5732 12.2373 22.5732 11.7624 22.2803 11.4695L13.3258 2.51499C12.5936 1.78276 11.4064 1.78276 10.6742 2.515L1.71967 11.4695C1.42678 11.7624 1.42678 12.2373 1.71967 12.5302C2.01256 12.8231 2.48744 12.8231 2.78033 12.5302L3.75 11.5605V19.8748C3.75 20.9104 4.58947 21.7498 5.625 21.7498H18.375C19.4105 21.7498 20.25 20.9104 20.25 19.8748V11.5605ZM13.5 20.2498H10.5V16.1248C10.5 15.9177 10.6679 15.7498 10.875 15.7498H13.125C13.3321 15.7498 13.5 15.9177 13.5 16.1248V20.2498Z"
                                                        fill="#111111" />
                                                </svg>
                                            </div>
                                            <div class="text">Course Management</div>
                                        </a>
                                    </li>
                                    <li class="menu-item">
                                        <a href="/admin-gallery" class="menu-item-button">
                                            <div class="icon"><i class="icon-file-plus"></i></div>
                                            <div class="text">Gallery Management</div>
                                        </a>                                   
                                    </li>
                                    <li class="menu-item active">
                                        <a href="/admin-assesment" class="menu-item-button">
                                            <div class="icon"><i class="icon-layers"></i></div>
                                            <div class="text">Assesment Management</div>
                                        </a>                                   
                                    </li>
                                    <li class="menu-item">
                                        <a href="/admin-studyAbroad" class="menu-item-button">
                                            <div class="icon"><i class="fa fa-users"></i></div>
                                            <div class="text">StudyAbroad Management</div>
                                        </a>
                                    </li>
                                    <li class="menu-item">
                                        <a href="/admin-events" class="menu-item-button">
                                            <div class="icon"><i class="fa fa-users"></i></div>
                                            <div class="text">Events Management</div>
                                        </a>
                                    </li>
                                    <li class="menu-item ">
                                        <a href="/admin-testimonials" class="menu-item-button">
                                            <div class="icon"><i class="fa fa-star-o"></i></div>
                                            <div class="text">Testimonials Management</div>
                                        </a>
                                    </li>
                                    <li class="menu-item">
                                        <a href="/admin-blogs" class="menu-item-button">
                                            <div class="icon"><i class="fa fa-star-o"></i></div>
                                            <div class="text">Blogs Management</div>
                                        </a>
                                       
                                    </li>
                                    <li class="menu-item">
                                        <a href="/admin-careers" class="menu-item-button">
                                            <div class="icon"><i class="fa fa-star-o"></i></div>
                                            <div class="text">Career Management</div>
                                        </a>
                                       
                                    </li>
                                    <li class="menu-item">
                                        <a href="/admin-users" class="menu-item-button">
                                            <div class="icon"><i class="fa fa-star-o"></i></div>
                                            <div class="text">User Management</div>
                                        </a>
                                       
                                    </li>
                                    <li class="menu-item">
                                        <a href="/admin-forms" class="menu-item-button">
                                            <div class="icon"><i class="fa fa-star-o"></i></div>
                                            <div class="text">Contact Submissions</div>
                                        </a>
                                       
                                    </li>
                                    <li class="menu-item">
                                        <a href="/logout" class="">
                                            <div class="icon">
                                                <svg width="24" height="22" viewBox="0 0 20 20" fill="none"
                                                    xmlns="http://www.w3.org/2000/svg">
                                                    <path
                                                        d="M8.125 18.6875C8.125 18.903 8.0394 19.1097 7.88702 19.262C7.73465 19.4144 7.52799 19.5 7.3125 19.5H1.625C1.19402 19.5 0.780698 19.3288 0.475951 19.024C0.171205 18.7193 0 18.306 0 17.875V1.625C0 1.19402 0.171205 0.780698 0.475951 0.475951C0.780698 0.171205 1.19402 0 1.625 0H7.3125C7.52799 0 7.73465 0.0856026 7.88702 0.237976C8.0394 0.390349 8.125 0.597012 8.125 0.8125C8.125 1.02799 8.0394 1.23465 7.88702 1.38702C7.73465 1.5394 7.52799 1.625 7.3125 1.625H1.625V17.875H7.3125C7.52799 17.875 7.73465 17.9606 7.88702 18.113C8.0394 18.2653 8.125 18.472 8.125 18.6875ZM19.2623 9.17516L15.1998 5.11266C15.0474 4.9602 14.8406 4.87455 14.625 4.87455C14.4094 4.87455 14.2026 4.9602 14.0502 5.11266C13.8977 5.26511 13.812 5.47189 13.812 5.6875C13.812 5.90311 13.8977 6.10989 14.0502 6.26234L16.7263 8.9375H7.3125C7.09701 8.9375 6.89035 9.0231 6.73798 9.17548C6.5856 9.32785 6.5 9.53451 6.5 9.75C6.5 9.96549 6.5856 10.1722 6.73798 10.3245C6.89035 10.4769 7.09701 10.5625 7.3125 10.5625H16.7263L14.0502 13.2377C13.8977 13.3901 13.812 13.5969 13.812 13.8125C13.812 14.0281 13.8977 14.2349 14.0502 14.3873C14.2026 14.5398 14.4094 14.6255 14.625 14.6255C14.8406 14.6255 15.0474 14.5398 15.1998 14.3873L19.2623 10.3248C19.3379 10.2494 19.3978 10.1598 19.4387 10.0611C19.4796 9.9625 19.5006 9.85678 19.5006 9.75C19.5006 9.64322 19.4796 9.5375 19.4387 9.43886C19.3978 9.34023 19.3379 9.25062 19.2623 9.17516Z"
                                                        fill="#111111" />
                                                </svg>
                                            </div>
                                            <div class="text">Log out</div>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /section-menu-left -->
                <!-- section-content-right -->
                <div class="section-content-right">
                    <!-- header-dashboard -->
                    <div class="header-dashboard">
                        <div class="wrap">
                            <div class="header-left">
                                <a href="/dashboard">
                                    <img style="width: 50px;" id="logo_header_mobile" alt="Maxtron" src="/images/iimf/logo.png"
                                        data-light="img/logo.png" data-dark="img/logo.png">
                                </a>
                                <div class="button-show-hide">
                                    <i class="icon-chevron-left"></i>
                                </div>
                               
                            </div>
                            <div class="header-grid">
                                <div class="header-item button-dark-light">
                                    <i class="icon-moon"></i>
                                </div>

                                <div class="header-item button-zoom-maximize">
                                    <div class="">
                                        <i class="icon-maximize"></i>
                                    </div>
                                </div>
                                <div class="popup-wrap user type-header">
                                    <div class="dropdown">
                                        <button class="btn btn-secondary dropdown-toggle" type="button"
                                            id="dropdownMenuButton3" data-bs-toggle="dropdown" aria-expanded="false">
                                            <span class="header-user wg-user">
                                                <span class="image">
                                                    <img src="admin-images/avatar/user-1.png" alt="Maxtron">
                                                </span>
                                                <span class="flex flex-column">
                                                    <span class="body-text text-main-dark">IIMF</span>
                                                    <span class="text-tiny">Admin</span>
                                                </span>
                                            </span>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end has-content"
                                            aria-labelledby="dropdownMenuButton3">

                                            <li>
                                                <a href="#" class="user-item">
                                                    <div class="icon">
                                                        <i class="icon-headphones"></i>
                                                    </div>
                                                    <div class="body-title-2">Support</div>
                                                </a>
                                            </li>
                                            <li>
                                                <a href="/logout" class="user-item">
                                                    <div class="icon">
                                                        <i class="icon-log-out"></i>
                                                    </div>
                                                    <div class="body-title-2">Log out</div>
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /header-dashboard -->
                    <!-- main-content -->
                    <div class="main-content">
                        <!-- main-content-wrap -->
                        <div class="main-content-inner">
                        <div class="container-fluid">
                            <div class="row mb-4">
                                <div class="col-12 d-flex justify-content-between align-items-center">
                                    <h3 class="mb-0">Assessment Management</h3>
                                </div>
                            </div>
                            <!-- Tabs Navigation -->
                            <ul class="nav nav-tabs mb-3" id="adminAssessmentTabs" role="tablist">
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link active" id="assessments-tab" data-bs-toggle="tab" data-bs-target="#assessmentsTabPane" type="button" role="tab" aria-controls="assessmentsTabPane" aria-selected="true">
                                        Assessments
                                    </button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" id="attempts-tab" data-bs-toggle="tab" data-bs-target="#attemptsTabPane" type="button" role="tab" aria-controls="attemptsTabPane" aria-selected="false">
                                        Attempts
                                    </button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" id="coupons-tab" data-bs-toggle="tab" data-bs-target="#couponsTabPane" type="button" role="tab" aria-controls="couponsTabPane" aria-selected="false">
                                        Coupons
                                    </button>
                                </li>
                            </ul>
                            <div class="tab-content" id="adminAssessmentTabsContent">
                                <!-- Assessments Tab -->
                                <div class="tab-pane fade show active" id="assessmentsTabPane" role="tabpanel" aria-labelledby="assessments-tab">
                                    <div class="d-flex justify-content-end mb-3">
                                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addAssessmentModal">
                                            <i class="icon-plus"></i> Add Assessment
                                        </button>
                                    </div>
                                    <div class="card mb-4">
                                        <div class="card-header">
                                            <h5 class="mb-0">Assessment List</h5>
                                        </div>
                                        <div class="card-body p-0">
                                            <div class="table-responsive">
                                                <table class="table table-hover align-middle mb-0">
                                                    <thead class="table-light">
                                                        <tr>
                                                            <th>#</th>
                                                            <th>Title</th>
                                                            <th>Category</th>
                                                            <th>Questions</th>
                                                            <th>Attempts</th>
                                                            <th>Created</th>
                                                            <th>Actions</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <% if (assessments && assessments.length > 0) { %>
                                                            <% assessments.forEach(function(assessment, idx) { %>
                                                                <tr>
                                                                    <td><%= idx + 1 %></td>
                                                                    <td><%= assessment.title %></td>
                                                                    <td><%= assessment.category || '-' %></td>
                                                                    <td>
                                                                        <%= assessment.questions ? assessment.questions.length : 0 %>
                                                                    </td>
                                                                    <td>
                                                                        <%= attempts.filter(a => String(a.assessment?._id) === String(assessment._id)).length %>
                                                                    </td>
                                                                    <td>
                                                                        <%= new Date(assessment.createdAt).toLocaleDateString() %>
                                                                    </td>
                                                                    <td>
                                                                        <button class="btn btn-sm btn-info me-1" onclick="viewAssessment('<%= assessment._id %>')">
                                                                            <i class="icon-eye"></i>
                                                                        </button>
                                                                        <button class="btn btn-sm btn-warning me-1" onclick="editAssessment('<%= assessment._id %>')">
                                                                            <i class="icon-edit"></i>
                                                                        </button>
                                                                        <button class="btn btn-sm btn-danger" onclick="deleteAssessment('<%= assessment._id %>')">
                                                                            <i class="icon-trash-2"></i>
                                                                        </button>
                                                                    </td>
                                                                </tr>
                                                            <% }) %>
                                                        <% } else { %>
                                                            <tr>
                                                                <td colspan="7" class="text-center">No assessments found.</td>
                                                            </tr>
                                                        <% } %>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!-- Attempts Tab -->
                                <div class="tab-pane fade" id="attemptsTabPane" role="tabpanel" aria-labelledby="attempts-tab">
                                    <div class="card mb-4">
                                        <div class="card-header">
                                            <h5 class="mb-0">Recent Attempts</h5>
                                        </div>
                                        <div class="card-body p-0">
                                            <div class="table-responsive">
                                                <table class="table table-hover align-middle mb-0">
                                                    <thead class="table-light">
                                                        <tr>
                                                            <th>#</th>
                                                            <th>Assessment</th>
                                                            <th>User/Guest</th>
                                                            <th>Score</th>
                                                            <th>Status</th>
                                                            <th>Result Unlocked</th>
                                                            <th>Date</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <% if (attempts && attempts.length > 0) { %>
                                                            <% attempts.slice(0, 20).forEach(function(attempt, idx) { %>
                                                                <tr>
                                                                    <td><%= idx + 1 %></td>
                                                                    <td><%= attempt.assessment ? attempt.assessment.title : 'N/A' %></td>
                                                                    <td>
                                                                        <% if (attempt.user) { %>
                                                                            <span class="badge bg-success">User</span>
                                                                        <% } else if (attempt.guestDetails && attempt.guestDetails.name) { %>
                                                                            <span class="badge bg-secondary">Guest: <%= attempt.guestDetails.name %></span>
                                                                        <% } else { %>
                                                                            <span class="badge bg-secondary">Guest</span>
                                                                        <% } %>
                                                                    </td>
                                                                    <td>
                                                                        <%= typeof attempt.score === 'number' ? attempt.score : '-' %>
                                                                    </td>
                                                                    <td>
                                                                        <% if (attempt.answers && attempt.answers.length > 0) { %>
                                                                            <span class="badge bg-info">Submitted</span>
                                                                        <% } else { %>
                                                                            <span class="badge bg-warning">Started</span>
                                                                        <% } %>
                                                                    </td>
                                                                    <td>
                                                                        <% if (attempt.isResultUnlocked) { %>
                                                                            <span class="badge bg-success">Yes</span>
                                                                        <% } else { %>
                                                                            <span class="badge bg-danger">No</span>
                                                                        <% } %>
                                                                    </td>
                                                                    <td>
                                                                        <%= new Date(attempt.createdAt).toLocaleString() %>
                                                                    </td>
                                                                </tr>
                                                            <% }) %>
                                                        <% } else { %>
                                                            <tr>
                                                                <td colspan="7" class="text-center">No attempts found.</td>
                                                            </tr>
                                                        <% } %>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!-- Coupons Tab -->
                                <div class="tab-pane fade" id="couponsTabPane" role="tabpanel" aria-labelledby="coupons-tab">
                                    <div class="card mb-4">
                                        <div class="card-header d-flex justify-content-between align-items-center">
                                            <h5 class="mb-0">Coupons</h5>
                                            <form id="addCouponForm" class="d-flex" onsubmit="return createCoupon(event)">
                                                <input type="text" class="form-control me-2" id="couponCodeInput" placeholder="New Coupon Code" required>
                                                <button type="submit" class="btn btn-success">Add Coupon</button>
                                            </form>
                                        </div>
                                        <div class="card-body p-0">
                                            <div class="table-responsive">
                                                <table class="table table-hover align-middle mb-0">
                                                    <thead class="table-light">
                                                        <tr>
                                                            <th>#</th>
                                                            <th>Code</th>
                                                            <th>Status</th>
                                                            <th>Used By</th>
                                                            <th>Actions</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <% if (coupons && coupons.length > 0) { %>
                                                            <% coupons.forEach(function(coupon, idx) { %>
                                                                <tr>
                                                                    <td><%= idx + 1 %></td>
                                                                    <td><%= coupon.code %></td>
                                                                    <td>
                                                                        <% if (coupon.isActive) { %>
                                                                            <span class="badge bg-success">Active</span>
                                                                        <% } else { %>
                                                                            <span class="badge bg-danger">Inactive</span>
                                                                        <% } %>
                                                                    </td>
                                                                    <td>
                                                                        <%= coupon.usedBy ? coupon.usedBy.length : 0 %>
                                                                    </td>
                                                                    <td>
                                                                        <button class="btn btn-sm btn-secondary" onclick="toggleCoupon('<%= coupon._id %>')">
                                                                            <%= coupon.isActive ? 'Deactivate' : 'Activate' %>
                                                                        </button>
                                                                    </td>
                                                                </tr>
                                                            <% }) %>
                                                        <% } else { %>
                                                            <tr>
                                                                <td colspan="5" class="text-center">No coupons found.</td>
                                                            </tr>
                                                        <% } %>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Add Assessment Modal -->
                        <div class="modal fade" id="addAssessmentModal" tabindex="-1" aria-labelledby="addAssessmentModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-lg">
                                <form id="addAssessmentForm" class="modal-content" onsubmit="return submitAssessmentForm(event)">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="addAssessmentModalLabel">Add New Assessment</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="mb-3">
                                            <label for="assessmentTitle" class="form-label">Title</label>
                                            <input type="text" class="form-control" id="assessmentTitle" name="title" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="assessmentCategory" class="form-label">Category</label>
                                            <input type="text" class="form-control" id="assessmentCategory" name="category" placeholder="e.g. Math, Science, General Knowledge" required>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Questions</label>
                                            <div id="questionsContainer"></div>
                                            <button type="button" class="btn btn-outline-primary btn-sm mt-2" onclick="addQuestionField()">Add Question</button>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                        <button type="submit" class="btn btn-primary">Create Assessment</button>
                                    </div>
                                </form>
                            </div>
                        </div>

                        <!-- View Assessment Modal -->
                        <div class="modal fade" id="viewAssessmentModal" tabindex="-1" aria-labelledby="viewAssessmentModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-lg">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="viewAssessmentModalLabel">Assessment Details</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body" id="viewAssessmentModalBody">
                                        <!-- Content will be loaded dynamically -->
                                        <div class="text-center text-muted">Loading...</div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Edit Assessment Modal -->
                        <div class="modal fade" id="editAssessmentModal" tabindex="-1" aria-labelledby="editAssessmentModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-lg">
                                <form id="editAssessmentForm" class="modal-content" onsubmit="return submitEditAssessmentForm(event)">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="editAssessmentModalLabel">Edit Assessment</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body" id="editAssessmentModalBody">
                                        <!-- Content will be loaded dynamically -->
                                        <div class="text-center text-muted">Loading...</div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                        <button type="submit" class="btn btn-primary">Update Assessment</button>
                                    </div>
                                </form>
                            </div>
                        </div>

                        <script>
                        // Bootstrap tab persistence (optional, for better UX)
                        document.addEventListener('DOMContentLoaded', function() {
                            const tabKey = 'adminAssessmentActiveTab';
                            const tabTriggerEls = [].slice.call(document.querySelectorAll('#adminAssessmentTabs button[data-bs-toggle="tab"]'));
                            tabTriggerEls.forEach(function(tabEl) {
                                tabEl.addEventListener('shown.bs.tab', function (event) {
                                    localStorage.setItem(tabKey, event.target.id);
                                });
                            });
                            const activeTab = localStorage.getItem(tabKey);
                            if (activeTab) {
                                const someTab = document.getElementById(activeTab);
                                if (someTab) {
                                    new bootstrap.Tab(someTab).show();
                                }
                            }
                        });

                        // Dynamically add question fields (with separate option boxes)
                        function addQuestionField() {
                            const container = document.getElementById('questionsContainer');
                            const idx = container.children.length;
                            const html = `
                                <div class="card mb-2 p-2 question-card" data-question-idx="${idx}">
                                    <div class="mb-2">
                                        <label>Question</label>
                                        <input type="text" class="form-control" name="questions[${idx}][text]" required>
                                    </div>
                                    <div class="mb-2">
                                        <label>Options</label>
                                        <div class="options-container" id="optionsContainer${idx}">
                                            <div class="input-group mb-1 option-row">
                                                <input type="text" class="form-control" name="questions[${idx}][options][]" placeholder="Option 1" required>
                                                <button type="button" class="btn btn-outline-danger btn-sm remove-option-btn" title="Remove Option" onclick="removeOption(this)">
                                                    <i class="icon-trash-2"></i>
                                                </button>
                                            </div>
                                            <div class="input-group mb-1 option-row">
                                                <input type="text" class="form-control" name="questions[${idx}][options][]" placeholder="Option 2" required>
                                                <button type="button" class="btn btn-outline-danger btn-sm remove-option-btn" title="Remove Option" onclick="removeOption(this)">
                                                    <i class="icon-trash-2"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <button type="button" class="btn btn-outline-success btn-sm mt-1" onclick="addOptionField(${idx})">
                                            <i class="icon-plus"></i> Add Option
                                        </button>
                                    </div>
                                    <div class="mb-2">
                                        <label>Correct Answer</label>
                                        <select class="form-select" name="questions[${idx}][correct]" id="correctAnswerSelect${idx}" required>
                                            <option value="">Select correct answer</option>
                                        </select>
                                    </div>
                                    <button type="button" class="btn btn-sm btn-danger" onclick="this.closest('.question-card').remove()">Remove Question</button>
                                </div>
                            `;
                            container.insertAdjacentHTML('beforeend', html);
                            updateCorrectAnswerOptions(idx);
                        }

                        // Add a new option input for a question
                        function addOptionField(questionIdx) {
                            const optionsContainer = document.getElementById('optionsContainer' + questionIdx);
                            const optionCount = optionsContainer.querySelectorAll('.option-row').length;
                            const html = `
                                <div class="input-group mb-1 option-row">
                                    <input type="text" class="form-control" name="questions[${questionIdx}][options][]" placeholder="Option ${optionCount + 1}" required>
                                    <button type="button" class="btn btn-outline-danger btn-sm remove-option-btn" title="Remove Option" onclick="removeOption(this)">
                                        <i class="icon-trash-2"></i>
                                    </button>
                                </div>
                            `;
                            optionsContainer.insertAdjacentHTML('beforeend', html);
                            updateCorrectAnswerOptions(questionIdx);
                        }

                        // Remove an option input
                        function removeOption(btn) {
                            const optionRow = btn.closest('.option-row');
                            const optionsContainer = optionRow.parentElement;
                            const questionCard = btn.closest('.question-card');
                            const questionIdx = questionCard.getAttribute('data-question-idx');
                            optionRow.remove();
                            updateCorrectAnswerOptions(questionIdx);
                        }

                        // Update the correct answer select options for a question
                        function updateCorrectAnswerOptions(questionIdx) {
                            const optionsContainer = document.getElementById('optionsContainer' + questionIdx);
                            const select = document.getElementById('correctAnswerSelect' + questionIdx);
                            if (!optionsContainer || !select) return;
                            // Save current value
                            const currentValue = select.value;
                            // Remove all options except the first
                            select.options.length = 1;
                            // Add new options
                            const optionInputs = optionsContainer.querySelectorAll('input[name="questions[' + questionIdx + '][options][]"]');
                            optionInputs.forEach(function(input, i) {
                                const val = input.value;
                                const opt = document.createElement('option');
                                opt.value = val;
                                opt.text = val ? val : 'Option ' + (i + 1);
                                select.appendChild(opt);
                            });
                            // Try to restore previous selection
                            if (currentValue) {
                                select.value = currentValue;
                            }
                            // Listen for input changes to update select
                            optionInputs.forEach(function(input) {
                                input.oninput = function() {
                                    updateCorrectAnswerOptions(questionIdx);
                                };
                            });
                        }

                        // Handle assessment form submission
                        async function submitAssessmentForm(event) {
                            event.preventDefault();
                            const form = event.target;
                            const formData = new FormData(form);
                            const title = formData.get('title');
                            const category = formData.get('category');
                            const questions = [];
                            // Parse questions
                            // We'll collect all question cards
                            const questionCards = form.querySelectorAll('.question-card');
                            questionCards.forEach(function(card, idx) {
                                const text = card.querySelector('input[name="questions['+idx+'][text]"]')?.value?.trim();
                                const optionInputs = card.querySelectorAll('input[name="questions['+idx+'][options][]"]');
                                const options = Array.from(optionInputs).map(input => input.value.trim()).filter(Boolean);
                                const correct = card.querySelector('select[name="questions['+idx+'][correct]"]')?.value?.trim();
                                if (text && options.length >= 2 && correct) {
                                    questions.push({
                                        text,
                                        options,
                                        correctAnswer: correct
                                    });
                                }
                            });
                            if (!title || !category || questions.length === 0) {
                                alert('Please fill all fields, add at least one question, and ensure each question has at least 2 options and a correct answer.');
                                return false;
                            }
                            // Prepare payload
                            const payload = {
                                title,
                                category,
                                questions
                            };
                            try {
                                const res = await fetch('/createAssessment', {
                                    method: 'POST',
                                    headers: { 'Content-Type': 'application/json' },
                                    body: JSON.stringify(payload)
                                });
                                const data = await res.json();
                                if (data.success) {
                                    alert('Assessment created!');
                                    location.reload();
                                } else {
                                    alert(data.message || 'Error creating assessment');
                                }
                            } catch (err) {
                                alert('Error: ' + err.message);
                            }
                            return false;
                        }

                        // Coupon creation
                        async function createCoupon(event) {
                            event.preventDefault();
                            const code = document.getElementById('couponCodeInput').value.trim();
                            if (!code) return false;
                            try {
                                const res = await fetch('/createCoupon', {
                                    method: 'POST',
                                    headers: { 'Content-Type': 'application/json' },
                                    body: JSON.stringify({ code })
                                });
                                const data = await res.json();
                                if (data.success) {
                                    alert('Coupon created!');
                                    location.reload();
                                } else {
                                    alert(data.message || 'Error creating coupon');
                                }
                            } catch (err) {
                                alert('Error: ' + err.message);
                            }
                            return false;
                        }

                        // Toggle coupon active/inactive
                        async function toggleCoupon(id) {
                            try {
                                const res = await fetch(`/toggleCoupon/${id}`, {
                                    method: 'PATCH'
                                });
                                const data = await res.json();
                                if (data.success) {
                                    location.reload();
                                } else {
                                    alert(data.message || 'Error toggling coupon');
                                }
                            } catch (err) {
                                alert('Error: ' + err.message);
                            }
                        }

                        // View Assessment - fetch and show in modal
                        async function viewAssessment(id) {
                            const modal = new bootstrap.Modal(document.getElementById('viewAssessmentModal'));
                            const modalBody = document.getElementById('viewAssessmentModalBody');
                            modalBody.innerHTML = `
                                <div class="d-flex justify-content-center align-items-center" style="min-height:120px;">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                </div>
                            `;
                            modal.show();
                            try {
                                const res = await fetch(`/getAssessmentById/${id}`);
                                const data = await res.json();
                                if (data.success && data.assessment) {
                                    const a = data.assessment;
                                    let html = `
                                        <div class="container-fluid px-0">
                                            <div class="row mb-3">
                                                <div class="col-12">
                                                    <h4 class="fw-bold text-primary mb-1">${a.title}</h4>
                                                    <div class="d-flex flex-wrap gap-3 mb-2">
                                                        <span class="badge bg-info text-dark"><i class="icon-tag"></i> ${a.category || '-'}</span>
                                                        <span class="badge bg-light text-secondary"><i class="icon-calendar"></i> ${new Date(a.createdAt).toLocaleString()}</span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-12">
                                                    <h5 class="fw-semibold mb-3 text-secondary">Questions</h5>
                                                    <div class="list-group">
                                    `;
                                    if (a.questions && a.questions.length > 0) {
                                        a.questions.forEach((qObj, i) => {
                                            const q = qObj.question;
                                            if (!q) {
                                                html += `<div class="list-group-item"><em>Invalid question data</em></div>`;
                                                return;
                                            }
                                            html += `
                                                <div class="list-group-item flex-column align-items-start py-3 px-2 px-md-4">
                                                    <div class="d-flex w-100 justify-content-between align-items-center mb-2">
                                                        <span class="fw-semibold text-dark">Q${i+1}:</span>
                                                        <span class="badge bg-light text-muted small">${new Date(q.createdAt).toLocaleDateString()}</span>
                                                    </div>
                                                    <div class="mb-2 text-break" style="font-size:1.05rem;">${q.questionText}</div>
                                                    <ul class="list-unstyled mb-0">
                                                        ${
                                                            Array.isArray(q.options) ? q.options.map((opt, idx) => 
                                                                `<li class="mb-1 d-flex align-items-center" style="font-size:0.98rem;">
                                                                    <span class="me-2 ${idx === q.correctAnswer ? 'text-success' : 'text-muted'}">
                                                                        <i class="icon-circle${idx === q.correctAnswer ? '-check' : ''}"></i>
                                                                    </span>
                                                                    <span${idx === q.correctAnswer ? ' style="font-weight:bold;color:green;"' : ''}>
                                                                        ${opt}${idx === q.correctAnswer ? ' <span class="badge bg-success ms-1">Correct</span>' : ''}
                                                                    </span>
                                                                </li>`
                                                            ).join('') : '<li class="text-danger">No options</li>'
                                                        }
                                                    </ul>
                                                </div>
                                            `;
                                        });
                                    } else {
                                        html += `<div class="list-group-item text-center text-muted">No questions found.</div>`;
                                    }
                                    html += `
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    `;
                                    modalBody.innerHTML = html;
                                } else {
                                    modalBody.innerHTML = `<div class="text-danger text-center py-4">Failed to load assessment details.</div>`;
                                }
                            } catch (err) {
                                modalBody.innerHTML = `<div class="text-danger text-center py-4">Error: ${err.message}</div>`;
                            }
                        }

                        // Edit Assessment - fetch, populate, and show in modal
                        async function editAssessment(id) {
                            const modal = new bootstrap.Modal(document.getElementById('editAssessmentModal'));
                            const modalBody = document.getElementById('editAssessmentModalBody');
                            modalBody.innerHTML = '<div class="text-center text-muted">Loading...</div>';
                            modal.show();
                            try {
                                const res = await fetch(`/getAssessmentById/${id}`);
                                const data = await res.json();
                                if (data.success && data.assessment) {
                                    const a = data.assessment;
                                    let html = `
                                        <input type="hidden" name="assessmentId" value="${a._id}">
                                        <div class="mb-3">
                                            <label for="editAssessmentTitle" class="form-label">Title</label>
                                            <input type="text" class="form-control" id="editAssessmentTitle" name="title" value="${a.title || ''}" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="editAssessmentCategory" class="form-label">Category</label>
                                            <input type="text" class="form-control" id="editAssessmentCategory" name="category" value="${a.category || ''}" required>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Questions</label>
                                            <div id="editQuestionsContainer"></div>
                                            <button type="button" class="btn btn-outline-primary btn-sm mt-2" onclick="addEditQuestionField()">Add Question</button>
                                        </div>
                                    `;
                                    modalBody.innerHTML = html;
                                    // Now populate questions
                                    const container = document.getElementById('editQuestionsContainer');
                                    if (a.questions && a.questions.length > 0) {
                                        a.questions.forEach((qObj, idx) => {
                                     
                                            let q = qObj && qObj.question ? qObj.question : {};
                                        
                                            const questionData = {
                                                text: q.questionText || '',
                                                options: Array.isArray(q.options) ? q.options : [],
                                             
                                                correctAnswer: (typeof q.correctAnswer === 'number' && Array.isArray(q.options) && q.options[q.correctAnswer] !== undefined)
                                                    ? q.options[q.correctAnswer]
                                                    : ''
                                            };
                                            addEditQuestionField(questionData, idx);
                                        });
                                    }
                                } else {
                                    modalBody.innerHTML = `<div class="text-danger">Failed to load assessment details.</div>`;
                                }
                            } catch (err) {
                                modalBody.innerHTML = `<div class="text-danger">Error: ${err.message}</div>`;
                            }
                        }

                        // Add question field for edit modal
                        function addEditQuestionField(q = null, idx = null) {
                            const container = document.getElementById('editQuestionsContainer');
                            if (!container) return;
                            if (idx === null) idx = container.children.length;
                            const questionText = q && q.text ? q.text.replace(/"/g, '&quot;') : '';
                            const options = q && q.options ? q.options : [];
                            const correct = q && q.correctAnswer ? q.correctAnswer : '';
                            let html = `
                                <div class="card mb-2 p-2 edit-question-card" data-question-idx="${idx}">
                                    <div class="mb-2">
                                        <label>Question</label>
                                        <input type="text" class="form-control" name="questions[${idx}][text]" value="${questionText}" required>
                                    </div>
                                    <div class="mb-2">
                                        <label>Options</label>
                                        <div class="options-container" id="editOptionsContainer${idx}">
                            `;
                            // At least 2 options
                            let optionCount = Math.max(2, options.length);
                            for (let i = 0; i < optionCount; i++) {
                                const optVal = options[i] ? options[i].replace(/"/g, '&quot;') : '';
                                html += `
                                    <div class="input-group mb-1 option-row">
                                        <input type="text" class="form-control" name="questions[${idx}][options][]" value="${optVal}" placeholder="Option ${i+1}" required>
                                        <button type="button" class="btn btn-outline-danger btn-sm remove-option-btn" title="Remove Option" onclick="removeEditOption(this)">
                                            <i class="icon-trash-2"></i>
                                        </button>
                                    </div>
                                `;
                            }
                            html += `
                                        </div>
                                        <button type="button" class="btn btn-outline-success btn-sm mt-1" onclick="addEditOptionField(${idx})">
                                            <i class="icon-plus"></i> Add Option
                                        </button>
                                    </div>
                                    <div class="mb-2">
                                        <label>Correct Answer</label>
                                        <select class="form-select" name="questions[${idx}][correct]" id="editCorrectAnswerSelect${idx}" required>
                                            <option value="">Select correct answer</option>
                            `;
                            for (let i = 0; i < optionCount; i++) {
                                const optVal = options[i] || '';
                                html += `<option value="${optVal.replace(/"/g, '&quot;')}"${optVal === correct ? ' selected' : ''}>${optVal ? optVal : 'Option ' + (i+1)}</option>`;
                            }
                            html += `
                                        </select>
                                    </div>
                                    <button type="button" class="btn btn-sm btn-danger" onclick="this.closest('.edit-question-card').remove()">Remove Question</button>
                                </div>
                            `;
                            container.insertAdjacentHTML('beforeend', html);
                            updateEditCorrectAnswerOptions(idx);
                        }

                        // Add a new option input for a question in edit modal
                        function addEditOptionField(questionIdx) {
                            const optionsContainer = document.getElementById('editOptionsContainer' + questionIdx);
                            const optionCount = optionsContainer.querySelectorAll('.option-row').length;
                            const html = `
                                <div class="input-group mb-1 option-row">
                                    <input type="text" class="form-control" name="questions[${questionIdx}][options][]" placeholder="Option ${optionCount + 1}" required>
                                    <button type="button" class="btn btn-outline-danger btn-sm remove-option-btn" title="Remove Option" onclick="removeEditOption(this)">
                                        <i class="icon-trash-2"></i>
                                    </button>
                                </div>
                            `;
                            optionsContainer.insertAdjacentHTML('beforeend', html);
                            updateEditCorrectAnswerOptions(questionIdx);
                        }

                        // Remove an option input in edit modal
                        function removeEditOption(btn) {
                            const optionRow = btn.closest('.option-row');
                            const optionsContainer = optionRow.parentElement;
                            const questionCard = btn.closest('.edit-question-card');
                            const questionIdx = questionCard.getAttribute('data-question-idx');
                            optionRow.remove();
                            updateEditCorrectAnswerOptions(questionIdx);
                        }

                        // Update the correct answer select options for a question in edit modal
                        function updateEditCorrectAnswerOptions(questionIdx) {
                            const optionsContainer = document.getElementById('editOptionsContainer' + questionIdx);
                            const select = document.getElementById('editCorrectAnswerSelect' + questionIdx);
                            if (!optionsContainer || !select) return;
                            // Save current value
                            const currentValue = select.value;
                            // Remove all options except the first
                            select.options.length = 1;
                            // Add new options
                            const optionInputs = optionsContainer.querySelectorAll('input[name="questions[' + questionIdx + '][options][]"]');
                            optionInputs.forEach(function(input, i) {
                                const val = input.value;
                                const opt = document.createElement('option');
                                opt.value = val;
                                opt.text = val ? val : 'Option ' + (i + 1);
                                select.appendChild(opt);
                            });
                            // Try to restore previous selection
                            if (currentValue) {
                                select.value = currentValue;
                            }
                            // Listen for input changes to update select
                            optionInputs.forEach(function(input) {
                                input.oninput = function() {
                                    updateEditCorrectAnswerOptions(questionIdx);
                                };
                            });
                        }

                        // Handle edit assessment form submission
                        async function submitEditAssessmentForm(event) {
                            event.preventDefault();
                            const form = event.target;
                            const formData = new FormData(form);
                            const assessmentId = formData.get('assessmentId');
                            const title = formData.get('title');
                            const category = formData.get('category');
                            const questions = [];
                            // Parse questions
                            const questionCards = form.querySelectorAll('.edit-question-card');
                            questionCards.forEach(function(card, idx) {
                                const text = card.querySelector('input[name="questions['+idx+'][text]"]')?.value?.trim();
                                const optionInputs = card.querySelectorAll('input[name="questions['+idx+'][options][]"]');
                                const options = Array.from(optionInputs).map(input => input.value.trim()).filter(Boolean);
                                const correct = card.querySelector('select[name="questions['+idx+'][correct]"]')?.value?.trim();
                                if (text && options.length >= 2 && correct) {
                                    questions.push({
                                        text,
                                        options,
                                        correctAnswer: correct
                                    });
                                }
                            });
                            if (!title || !category || questions.length === 0) {
                                alert('Please fill all fields, add at least one question, and ensure each question has at least 2 options and a correct answer.');
                                return false;
                            }
                            // Prepare payload
                            const payload = {
                                title,
                                category,
                                questions
                            };
                            try {
                                const res = await fetch(`/updateAssessment/${assessmentId}`, {
                                    method: 'PUT',
                                    headers: { 'Content-Type': 'application/json' },
                                    body: JSON.stringify(payload)
                                });
                                const data = await res.json();
                                if (data.success) {
                                    alert('Assessment updated!');
                                    location.reload();
                                } else {
                                    alert(data.message || 'Error updating assessment');
                                }
                            } catch (err) {
                                alert('Error: ' + err.message);
                            }
                            return false;
                        }

                        // Placeholder for delete assessment
                        function deleteAssessment(id) {
                            if (confirm('Are you sure you want to delete this assessment?')) {
                                // Implement delete logic here
                                alert('Delete not implemented in demo.');
                            }
                        }
                        </script>
                        </div>
                        <!-- /main-content-wrap -->
                        <!-- bottom-page -->
                        <div class="bottom-page">
                            <div class="body-text">Copyright © 2025 <a href="https://trivlogic.com">Trivlogic</a>.
                                Design by Trivlogic All rights reserved</div>
                        </div>
                        <!-- /bottom-page -->
                    </div>
                    <!-- /main-content -->
                </div>
                <!-- /section-content-right -->
            </div>
            <!-- /layout-wrap -->
        </div>
        <!-- /#page -->
    </div>
    <!-- /#wrapper -->
 
    <!-- Javascript -->
    <script src="admin-js/jquery.min.js"></script>
    <script src="admin-js/bootstrap.min.js"></script>
    <script src="admin-js/bootstrap-select.min.js"></script>
    <script src="admin-js/zoom.js"></script>
    <script src="admin-js/morris.min.js"></script>
    <script src="admin-js/raphael.min.js"></script>
    <script src="admin-js/apexcharts/apexcharts.js"></script>
    <script src="admin-js/apexcharts/line-chart-1.js"></script>
    <script src="admin-js/apexcharts/line-chart-2.js"></script>
    <script src="admin-js/apexcharts/line-chart-3.js"></script>
    <script src="admin-js/apexcharts/line-chart-4.js"></script>
    <script src="admin-js/apexcharts/line-chart-5.js"></script>
    <script src="admin-js/apexcharts/line-chart-6.js"></script>
    <script src="admin-js/apexcharts/line-chart-7.js"></script>
    <script src="admin-js/switcher.js"></script>
    <script defer src="admin-js/theme-settings.js"></script>
    <script src="admin-js/main.js"></script>

</body>

</html>